on:
  pull_request:
    paths:
      - app_rust/**
      - .github/workflows/rust.yml
  push:
    branches:
      - master

name: app_rust

defaults:
  run:
    working-directory: ./app_rust

jobs:
  test:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v2
      - uses: actions-rs/toolchain@v1
        with:
          toolchain: stable
          components: clippy,rustfmt
      - uses: Swatinem/rust-cache@v2
        with:
          workspaces: app_rust -> target

      - name: rustfmt
        uses: actions-rs/cargo@v1
        with:
          command: fmt
          args: --all --manifest-path app_rust/Cargo.toml -- --check

      - name: clippy
        uses: actions-rs/clippy-check@v1
        with:
          token: ${{ secrets.GITHUB_TOKEN }}
          args: --all-features --manifest-path app_rust/Cargo.toml

      - name: Tests
        uses: actions-rs/cargo@v1
        with:
          command: test
          args: --all-features --manifest-path app_rust/Cargo.toml

  docker:
    name: Docker
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v2
      - name: Checkout
        uses: actions/checkout@v2
      - name: Login to Docker Hub
        uses: docker/login-action@v1
        with:
          username: ${{ secrets.DOCKER_USER }}
          password: ${{ secrets.DOCKER_TOKEN }}
      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v1
      - name: Build and push
        uses: docker/build-push-action@v2
        with:
          context: app_rust
          file: app_rust/Dockerfile
          push: true
          tags: dvechtomova/rust_app:latest
          cache-from: type=registry,ref=dvechtomova/rust_app:buildcache
          cache-to: type=registry,ref=dvechtomova/rust_app:buildcache,mode=max

  snyk-image:
    runs-on: ubuntu-latest
    needs: [docker]
    steps:
      - uses: actions/checkout@master
      - name: Run Snyk to check Docker image for vulnerabilities
        uses: snyk/actions/docker@master
        continue-on-error: true
        env:
          SNYK_TOKEN: ${{ secrets.SNYK_TOKEN }}
        with:
          image: dvechtomova/rust_app:latest
          args: --file=app_rust/Dockerfile --sarif-file-output=snyk.sarif
      - name: Upload result to GitHub Code Scanning
        uses: github/codeql-action/upload-sarif@v2
        with:
          sarif_file: snyk.sarif
